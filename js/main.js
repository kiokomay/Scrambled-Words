const inputGuess = document.getElementById("input-guess");
const btnSubmit = document.getElementById("btn-submit");
const gameWord = document.getElementById("game-word");
const answerEl = document.getElementById("answer-el");
const levelOut = document.getElementById("level");
const scoreOut = document.getElementById("score");
const gameContainer = document.getElementById("score-container");
const guessContainer = document.getElementById("button-input-container");
const instructions = document.getElementById("instructions");
const btnPlay = document.getElementById("btn-play");
const btnReset = document.getElementById("btn-reset");

let level = 1;
let score = 0;
let word;
let correct = 0;

const levelOneWords = [
  "ace",
  "aid",
  "and",
  "aim",
  "add",
  "bee",
  "ban",
  "bus",
  "bet",
  "bin",
  "bun",
  "can",
  "cup",
  "cop",
  "cut",
  "cot",
  "den",
  "dew",
  "dab",
  "doe",
  "elf",
  "eat",
  "end",
  "fed",
  "fun",
  "fit",
  "gun",
  "goo",
  "gel",
  "hen",
  "hum",
  "hut",
  "ice",
  "ivy",
  "ill",
  "jet",
  "jab",
  "jug",
  "kid",
  "keg",
  "kit",
  "lad",
  "lid",
  "law",
  "mud",
  "met",
  "mid",
  "mom",
  "nut",
  "now",
  "not",
  "oil",
  "old",
  "oat",
  "pry",
  "pea",
  "pug",
  "rug",
  "rob",
  "rig",
  "saw",
  "sun",
  "sir",
  "sin",
  "set",
  "sew",
  "ton",
  "tug",
  "tar",
  "tub",
  "tin",
  "the",
  "tie",
  "toe",
  "tow",
  "tic",
  "try",
  "ugh",
  "use",
  "uni",
  "vex",
  "vet",
  "van",
  "vat",
  "via",
  "wed",
  "was",
  "wow",
  "war",
  "wok",
  "yam",
  "yak",
  "yay",
  "you",
  "yum",
  "zit",
  "zap",
  "zig",
  "zoo",
  "zen",
];

const levelTwoWords = [
  "able",
  "acai",
  "aced",
  "ally",
  "arcs",
  "aloe",
  "area",
  "arms",
  "apex",
  "axis",
  "ball",
  "babe",
  "beef",
  "barn",
  "bass",
  "byte",
  "boss",
  "buzz",
  "bull",
  "blob",
  "cars",
  "cake",
  "cash",
  "calm",
  "cusp",
  "crew",
  "crab",
  "cola",
  "cope",
  "dash",
  "deny",
  "dial",
  "dojo",
  "drew",
  "dude",
  "dumb",
  "diva",
  "dine",
  "dirt",
  "dupe",
  "ease",
  "edge",
  "edit",
  "emit",
  "exit",
  "expo",
  "evil",
  "fact",
  "fast",
  "fawn",
  "fang",
  "file",
  "fish",
  "fled",
  "fuse",
  "gaps",
  "glad",
  "gnaw",
  "grit",
  "gust",
  "hack",
  "hash",
  "hoax",
  "hula",
  "hoof",
  "hymn",
  "hype",
  "jinx",
  "jump",
  "jury",
  "kilo",
  "king",
  "keto",
  "kyak",
  "lava",
  "loaf",
  "lion",
  "lung",
  "mask",
  "mild",
  "myth",
  "nano",
  "neon",
  "oath",
  "once",
  "pact",
  "pill",
  "pout",
  "pulp",
  "rake",
  "roam",
  "ruby",
  "repo",
  "saga",
  "scab",
  "sewn",
  "sync",
  "task",
  "taco",
  "taxi",
  "them",
  "typo",
  "ugly",
  "udon",
  "uber",
  "vein",
  "vibe",
  "waft",
  "wage",
  "wisp",
  "whim",
  "yoga",
  "yolk",
  "yelp",
  "zeal",
  "zaps",
  "zags",
  "view",
  "vile",
  "twas",
];

const levelThreeWords = [
  "abyss",
  "above",
  "acute",
  "after",
  "agree",
  "agile",
  "align",
  "alpha",
  "angst",
  "apple",
  "baggy",
  "begin",
  "being",
  "bicep",
  "biome",
  "bling",
  "bored",
  "bound",
  "brand",
  "bunny",
  "cable",
  "cameo",
  "cargo",
  "cells",
  "chalk",
  "chirp",
  "cocoa",
  "comic",
  "creep",
  "daisy",
  "debut",
  "ditch",
  "dodge",
  "doing",
  "donor",
  "drama",
  "drape",
  "drunk",
  "dryly",
  "drone",
  "earth",
  "eager",
  "exile",
  "excel",
  "exams",
  "event",
  "error",
  "faker",
  "favor",
  "fibre",
  "fever",
  "flake",
  "floss",
  "froze",
  "fuzzy",
  "games",
  "gains",
  "ghost",
  "gloom",
  "grass",
  "habit",
  "heavy",
  "herbs",
  "hobby",
  "honey",
  "humid",
  "icier",
  "jewel",
  "joust",
  "juice",
  "kayak",
  "known",
  "knife",
  "knock",
  "label",
  "latch",
  "lever",
  "lucky",
  "mayor",
  "metro",
  "mossy",
  "nacho",
  "ninja",
  "oasis",
  "offer",
  "patch",
  "peach",
  "pesto",
  "queue",
  "ranch",
  "ratio",
  "rhyme",
  "rodeo",
  "salon",
  "seems",
  "sixth",
  "syrup",
  "taken",
  "talon",
  "tibia",
  "tidal",
  "torch",
  "unbox",
  "unzip",
  "urban",
  "vague",
  "venom",
  "wagon",
  "weave",
  "weigh",
  "wrote",
  "yacht",
  "yummy",
  "yells",
  "zesty",
  "zooms",
  "zones",
  "zebra",
  "zappy",
  "zoned",
];

const levelFourWords = [
  "accept",
  "accuse",
  "aerial",
  "advice",
  "aliens",
  "arcade",
  "asking",
  "asthma",
  "asleep",
  "avenue",
  "backup",
  "banned",
  "bitten",
  "branch",
  "bridge",
  "bypass",
  "bouncy",
  "botfly",
  "bistro",
  "beauty",
  "cactus",
  "chance",
  "cherry",
  "clumsy",
  "coding",
  "crayon",
  "cringe",
  "crypto",
  "cutlet",
  "dancer",
  "decode",
  "debugs",
  "digest",
  "dreamy",
  "dragon",
  "drowsy",
  "duplex",
  "doctor",
  "duress",
  "deadly",
  "easily",
  "eczema",
  "edited",
  "engage",
  "estate",
  "exotic",
  "extort",
  "favour",
  "felony",
  "firmly",
  "flurry",
  "fossil",
  "freeze",
  "frigid",
  "future",
  "galaxy",
  "ghosts",
  "giggle",
  "glitch",
  "global",
  "harbor",
  "heaven",
  "heroic",
  "hiatus",
  "honest",
  "hourly",
  "hybrid",
  "jersey",
  "junior",
  "jigsaw",
  "kernel",
  "kinder",
  "knight",
  "kissed",
  "lawyer",
  "league",
  "legend",
  "lentil",
  "mammal",
  "medium",
  "menace",
  "nectar",
  "nuzzle",
  "octave",
  "onward",
  "paddle",
  "peanut",
  "purify",
  "puzzle",
  "rabbit",
  "rancid",
  "rebuke",
  "rifles",
  "sacred",
  "sculpt",
  "shaved",
  "skates",
  "tailor",
  "thesis",
  "theory",
  "twelve",
  "turnip",
  "unwind",
  "upload",
  "useful",
  "vacant",
  "voyage",
  "waffle",
  "widget",
  "worthy",
  "wombat",
  "yellow",
  "yields",
  "yanked",
  "zygote",
  "zigzag",
  "zebras",
  "zodiac",
  "zipper",
  "zipped",
];

const levelFiveWords = [
  "abandon",
  "academy",
  "admirer",
  "awkward",
  "avatars",
  "bandage",
  "bedrock",
  "buzzcut",
  "briefly",
  "boycott",
  "bloomed",
  "camping",
  "carpool",
  "cyclone",
  "custard",
  "cuisine",
  "decoded",
  "dynasty",
  "doormat",
  "divorce",
  "exposed",
  "exhaust",
  "evasive",
  "frowned",
  "forfeit",
  "flatten",
  "gymnast",
  "guesses",
  "grownup",
  "hygiene",
  "however",
  "history",
  "italics",
  "islands",
  "involve",
  "juicing",
  "joining",
  "jawbone",
  "kneecap",
  "kingdom",
  "ketchup",
  "lunatic",
  "lullaby",
  "lottery",
  "mystery",
  "musical",
  "mockery",
  "mixture",
  "nursery",
  "numeric",
  "nominee",
  "overlap",
  "ourself",
  "ostrich",
  "puzzled",
  "pumpkin",
  "psychic",
  "radical",
  "rowboat",
  "rivalry",
  "symptom",
  "swimmer",
  "student",
  "squishy",
  "sixteen",
  "similar",
  "typhoon",
  "tuition",
  "thermal",
  "tension",
  "tsunami",
  "trumpet",
  "triumph",
  "trilogy",
  "trailer",
  "tourist",
  "toolbox",
  "urgency",
  "unlucky",
  "ukulele",
  "vulture",
  "vitamin",
  "varsity",
  "vaccine",
  "visitor",
  "wrinkle",
  "workout",
  "whisper",
  "weekend",
  "webpage",
  "yelling",
  "yielded",
  "quantum",
  "quickly",
  "qualify",
  "zipline",
  "zombies",
  "mistake",
  "mustard",
  "mission",
];

function reset() {
  level = 1;
  score = 0;
  correct = 0;
  word = "";
  updateBoard();
  answerEl.innerHTML = "";
  inputGuess.value = "";
}

function wordRandom(level) {
  word = level[Math.floor(Math.random() * level.length + 1) - 1];
  return word;
}

function scrambledWord(word) {
  let letters = word.split("");
  let currentIndex = letters.length,
    temporaryValue,
    randomIndex;
  while (0 !== currentIndex) {
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex -= 1;
    temporaryValue = letters[currentIndex];
    letters[currentIndex] = letters[randomIndex];
    letters[randomIndex] = temporaryValue;
  }

  return letters.join(" ");
}

function updateGame() {
  scoreOut.innerHTML = score;
  levelOut.innerHTML = level;
}

function checkAnswer(guess) {
  console.log(`Correct: ${correct}`);
  if (correct == 10) {
    level += 1;
    correct = 0;
  }
  if (guess === word) {
    answerEl.innerHTML = "<span class='correct'>CORRECT, GOOD WORK!</span>";
    score += 10;
    correct += 1;
    attempts = 0;
    levelUp();
  } else {
    answerEl.innerHTML = "<span class='incorrect'>INCORRECT, TRY AGAIN!</span>";
    score -= 5;
  }
  updateGame();
}

function levelUp() {
  if (level == 1) {
    wordRandom(levelOneWords);
  } else if (level == 2) {
    wordRandom(levelTwoWords);
  } else if (level == 3) {
    wordRandom(levelThreeWords);
  } else if (level == 4) {
    wordRandom(levelFourWords);
  } else if (level == 5) {
    wordRandom(levelFiveWords);
  } else if (level == 6 && score >= 250) {
    answerEl.innerHTML = "Congrats! You win!! Click Reset to play again!";
  } else if (level == 6 && score < 250) {
    answerEl.innerHTML = "Sorry, you lost. Click reset to play again!!";
  }
  console.log(`Word: ${word}`);
  gameWord.innerHTML = scrambledWord(word);
}

btnPlay.addEventListener("click", function (e) {
  instructions.classList.toggle("hide");
  gameContainer.classList.remove("hide");
});

btnSubmit.addEventListener("click", function (e) {
  checkAnswer(inputGuess.value.toLowerCase());
  inputGuess.value = "";
});

window.addEventListener(
  "keypress",
  function (e) {
    if (e.keyCode == 13) {
      checkAnswer(inputGuess.value.toLowerCase());
      inputGuess.value = "";
    }
  },
  false
);

btnReset.addEventListener("click", function (e) {
  reset();
  setLevel();
  guessContainer.classList.remove("hidden");
  userGuess.value = "";
});

levelUp();
